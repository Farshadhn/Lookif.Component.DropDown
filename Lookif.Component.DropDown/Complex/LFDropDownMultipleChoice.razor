@inherits LFDropDownMultipleChoiceBase
<div class="dropdown-container">
    <div class="dropdown-wrapper">
        <div class="dropdown-selection">
            <div class="dropdown-input-area @(Disable ? "disabled" : "")" 
                 @onclick="Toggle" 
                 @onclick:stopPropagation="true">
                <ul class="selected-items" @onclick:stopPropagation="true">
                    @foreach (var record in SelectedRecords)
                    {
                        <li class="selected-item">
                            <span class="item-remove" 
                                  title="Remove item" 
                                  aria-label="Remove item"
                                  @onclick="() => SelectOption(record.Key, false)">
                                ×
                            </span>
                            <span class="item-text">@record.Content</span>
                        </li>
                    }
                </ul>
                <div class="search-container">
                    <input disabled="@Disable" 
                           @bind-value="inputText" 
                           @oninput="(e) => inputText = e.Value.ToString()" 
                           type="text" 
                           class="search-input" />
                </div>
                <div class="dropdown-arrow">
                    <div class="arrow-icon"></div>
                </div>
            </div>
            <div class="dropdown-list @(Show ? "show" : "hide")">
                <ul class="options-list" role="listbox">
                    @foreach (var record in FilteredRecords)
                    {
                        <li class="option-item" 
                            role="option" 
                            @onclick="async () => await SelectOption(record.Key, true)">
                            @record.Content
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>