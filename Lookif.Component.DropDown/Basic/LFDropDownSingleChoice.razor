@inherits LFDropDownSingleChoiceBase
<div class="dropdown-container">
    <div class="dropdown-wrapper">
        <div class="dropdown-selection">
            <div class="dropdown-input-area @(Disable ? "disabled" : "")">
                @if (SelectedRecords is { Count: > 0 })
                {
                    <span class="selected-value">@SelectedRecords.FirstOrDefault().Content</span>
                }
                <div class="search-container" @onclick="Toggle" @onclick:stopPropagation="true">
                    <input disabled="@Disable" 
                           @bind-value="inputText" 
                           @oninput="(e) => inputText = e.Value.ToString()" 
                           type="text" 
                           class="search-input" />
                </div>
                <div class="dropdown-arrow">
                    <div class="arrow-icon"></div>
                </div>
            </div>
            <div class="dropdown-list @(Show ? "show" : "hide")">
                <ul class="options-list" role="listbox">
                    @foreach (var record in FilteredRecords)
                    {
                        <li class="option-item" 
                            role="option" 
                            @onclick="async () => await SelectOption(record.Key, true)">
                            @record.Content
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>